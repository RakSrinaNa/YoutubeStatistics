name: CI

on: [ push ]

env:
  APP_JAVA_VERSION: 15

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.APP_JAVA_VERSION }}
      - uses: actions/cache@v1
        name: Restore gradle cache
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.OS }}-gradle-${{ env.cache-name }}-
            ${{ runner.OS }}-gradle-
            ${{ runner.OS }}-
      - uses: actions/cache@v1
        name: Cache gradle wrapper
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
      - name: Set gradle permissions
        run: chmod +x gradlew
      - name: Check project
        run: ./gradlew check
        env:
          GITHUB_USER: RakSrinaNa
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  dropbox:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.APP_JAVA_VERSION }}
      - uses: actions/cache@v1
        name: Restore gradle cache
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.OS }}-gradle-${{ env.cache-name }}-
            ${{ runner.OS }}-gradle-
            ${{ runner.OS }}-
      - uses: actions/cache@v1
        name: Cache gradle wrapper
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
      - name: Set gradle permissions
        run: chmod +x gradlew
      - name: Build app
        run: ./gradlew build
        env:
          GITHUB_USER: RakSrinaNa
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Deploy on Dropbox
        run: |
          curl "${UPLOADER_FETCH_URL}" -o "${UPLOADER}" &&
          echo "OAUTH_ACCESS_TOKEN=${DROPBOX_DEPLOY_TOKEN}" > "${UPLOADER_CONFIG}" &&
          bash "${UPLOADER}" -f "${UPLOADER_CONFIG}" mkdir "${TARGET_FOLDER}" &>/dev/null || echo "Target folder exists" &&
          bash "${UPLOADER}" -f "${UPLOADER_CONFIG}" upload build/libs/*-shaded.jar "${TARGET_FOLDER}"
        env:
          TARGET_FOLDER: "/Documents/JARs/YouTubeStatistics.jar"
          UPLOADER_FETCH_URL: "https://raw.githubusercontent.com/andreafabrizi/Dropbox-Uploader/master/dropbox_uploader.sh"
          UPLOADER: "dropbox_uploader.sh"
          UPLOADER_CONFIG: "dropbox_uploader.cfg"
          DROPBOX_DEPLOY_TOKEN: ${{ secrets.DROPBOX_DEPLOY_TOKEN }}